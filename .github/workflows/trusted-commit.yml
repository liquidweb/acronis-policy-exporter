name: commit jobs

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ main ]


jobs:
  go-test:
    runs-on: ubuntu-latest
    container:
      image: golang:alpine
      options: --cpus 1
    steps:
    - uses: actions/checkout@master
    - name: non-interactive go test
      run: go test -v ./...
      env:
        CGO_ENABLED: 0

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@latest
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@login
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}{% raw %}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: "{% raw %}${{ steps.meta.outputs.tags }}"
          labels: ${{ steps.meta.outputs.labels }}

  dockerbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          registry: docker.pkg.github.com
          password: ${{ secrets.GITHUB_TOKEN }}
          image: acronis-policy-exporter
          cache: false

  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Helm Lint
        run: helm lint charts/acronis-policy-exporter

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.1
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
